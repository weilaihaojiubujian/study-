/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.1
 * Generated at: 2018-02-23 04:51:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.net.*;
import java.sql.*;

public final class pinglun_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  int pageSize=4;
 int pageCount;
 int showPage;
 
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");

request.setCharacterEncoding("utf-8");

      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n");
      out.write("<title>评论</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("body {  \r\n");
      out.write("    background: url(34.jpg);  \r\n");
      out.write("    background-size: 100%;  \r\n");
      out.write("    background-repeat: no-repeat;  \r\n");
      out.write("}  \r\n");
      out.write("  \r\n");
      out.write("  #btn_login {  \r\n");
      out.write("    font-size: 14px;  \r\n");
      out.write("    font-family: 宋体;  \r\n");
      out.write("  \r\n");
      out.write("    width: 120px;  \r\n");
      out.write("    height: 28px;  \r\n");
      out.write("    line-height: 28px;  \r\n");
      out.write("    text-align: center;  \r\n");
      out.write("  \r\n");
      out.write("    color: white;  \r\n");
      out.write("    background-color: #3BD9FF;  \r\n");
      out.write("    border-radius: 6px;  \r\n");
      out.write("    border: 0;  \r\n");
      out.write("  \r\n");
      out.write("    float: left;  \r\n");
      out.write("}  \r\n");
      out.write("\r\n");
      out.write("#login_control {  \r\n");
      out.write("    padding: 0 28px;  \r\n");
      out.write("}  \r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"login_frame\">  \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<ul>\r\n");
      out.write("<li><p><b></b>\r\n");
      out.write("    <hr>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("    ");
 
    /* String article=request.getParameter("article");*/
    String j=request.getParameter("use");
    System.out.println(j);
    String article=(String)session.getAttribute("article"+j);
    session.setAttribute("use",j);
      request.setCharacterEncoding("utf-8");
      String username="";
      String password = "";
      Cookie[] cookies = request.getCookies();
      if(cookies!=null&&cookies.length>0)
      {
           for(Cookie c:cookies)
           {
              if(c.getName().equals("username"))
              {
                   username = URLDecoder.decode(c.getValue(),"utf-8");
              }
              if(c.getName().equals("pass"))
              {
                   password = URLDecoder.decode(c.getValue(),"utf-8");
              }
           }
      }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</p></li>\r\n");
      out.write("<li><p>\r\n");
      out.write("\r\n");
      out.write(" \r\n");

		
	    final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
	    final String DB_URL = "jdbc:mysql://localhost/text?useUnicode=true&characterEncoding=utf-8&useSSL=false";

	   //  Database credentials
	    final String USER = "root";
	    final String PASS = "1004758012";

	  
	   Connection conn = null;
	   Statement stmt = null;
	   try{
		      //STEP 2: Register JDBC driver
		      Class.forName("com.mysql.jdbc.Driver");

		      //STEP 3: Open a connection
		      System.out.println("Connecting to database...");
		      conn = DriverManager.getConnection(DB_URL,USER,PASS);

		      //STEP 4: Execute a query
		      System.out.println("Creating statement...");
		      stmt = conn.createStatement();
		      String sql;
		      
		      ResultSet  rs=stmt.executeQuery("select * from pinglun");
		      rs.last();
		      int recordCount=rs.getRow();
		   
		      pageCount=(recordCount%pageSize==0)?(recordCount/pageSize):(recordCount/pageSize+1);
		 
		      String integer=request.getParameter("showPage");
		      if(integer==null){
		       integer="1";
		      }
		      try{showPage=Integer.parseInt(integer);
		      }catch(NumberFormatException e){
		       showPage=1;
		      }
		      if(showPage<=1){
		       showPage=1;
		      }
		      if(showPage>=pageCount){
		       showPage=pageCount;
		      }
		      int position=(showPage-1)*pageSize+1;
		      rs.absolute(position);
		     
		    
		      for(int i=1;i<=pageSize;i++){  
		    	  
		    	  String first=rs.getString("文章");
	              String wenben=rs.getString("评论人");
	              String second=rs.getString("评论");
	              String q="";
		    	  if(second.compareTo(q)!=0 && first.compareTo(article)==0){ 
      out.write("\r\n");
      out.write("\t\t    \t    <table>\r\n");
      out.write("\t\t    \t     <tr> \r\n");
      out.write("\t\t    \t      <p>尊敬的");
      out.print(first );
      out.write("</p>\r\n");
      out.write("\t\t    \t      <p>");
      out.print(wenben );
      out.write("</p>\r\n");
      out.write("\t\t    \t      <p>");
      out.print(second );
      out.write("</p>\r\n");
      out.write("\t\t    \t     </tr>\r\n");
      out.write("\t\t    \t   \r\n");
      out.write("\t\t    \t     ");
   }
   rs.next();
  } 
		      
  rs.close();
  conn.close();
  }
  catch(Exception e){
  e.printStackTrace();}
 
      out.write("\r\n");
      out.write(" <br>\r\n");
      out.write(" 第");
      out.print(showPage );
      out.write('页');
      out.write('（');
      out.write('共');
      out.print(pageCount );
      out.write("页）\r\n");
      out.write(" <br>\r\n");
      out.write(" <a href=\"pinglun.jsp?showPage=1\">首页</a>\r\n");
      out.write(" <a href=\"pinglun.jsp?showPage=");
      out.print(showPage-1);
      out.write("\">上一页</a>\r\n");
 //根据pageCount的值显示每一页的数字并附加上相应的超链接
  for(int i=1;i<=pageCount;i++){
 
      out.write("\r\n");
      out.write("   <a href=\"pinglun.jsp?showPage=");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</a>\r\n");
 }
 
      out.write(" \r\n");
      out.write(" <a href=\"pinglun.jsp?showPage=");
      out.print(showPage+1);
      out.write("\">下一页</a>\r\n");
      out.write(" <a href=\"pinglun.jsp?showPage=");
      out.print(pageCount);
      out.write("\">末页</a>\r\n");
      out.write(" <!-- 通过表单提交用户想要显示的页数 -->\r\n");
      out.write(" <form action=\"\" method=\"get\">\r\n");
      out.write("  跳转到第<input type=\"text\" name=\"showPage\" size=\"4\">页\r\n");
      out.write("  <input type=\"submit\" name=\"submit\" value=\"跳转\">\r\n");
      out.write(" </form> \r\n");
      out.write("\t\t \r\n");
      out.write(" \r\n");
      out.write("</p></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</div> \r\n");
      out.write(" <form name=\"regForm\" action=\"pinglunshixian.jsp\"method=\"post\">\r\n");
      out.write("                 <tr>\r\n");
      out.write("\t\t\t    \t<td class=\"label\">评论</td>\r\n");
      out.write("\t\t\t    \t<td class=\"controler\">\r\n");
      out.write("\t\t\t    \t\t<textarea name=\"pinglun\" id=\"pinglun\" rows=\"10\" cols=\"40\"\"></textarea>\r\n");
      out.write("\t\t\t    \t</td>\r\n");
      out.write("\t\t\t    </tr>\r\n");
      out.write("\t\t\t    <div id=\"login_control\">  \r\n");
      out.write("           <input type=\"submit\" id=\"btn_login\" value=\"评论\" onclick=\"login();\"name=\"submit\"/> \r\n");
      out.write("             \r\n");
      out.write("        </div>\r\n");
      out.write(" </form> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
